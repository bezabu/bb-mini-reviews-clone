from django.db import models

class Genre(models.Model):
    name = models.CharField(max_length=255, blank=True)
    color = models.SlugField(max_length=7, blank=False)

    class Meta:
        ordering = ['name']

    def __str__(self):
        return f'{self.title}'




from django.db import models

from django.contrib.auth.models import User
from comments.models import Comment

VOTE_DIRECTION = ((0, 'neutral'), (1, 'up'), (2, 'down'))

class Vote(models.Model):
    """
    Like model, related to 'owner' and 'post'.
    'owner' is a User instance and 'post' is a Post instance.
    'unique_together' makes sure a user can't like the same post twice.
    """
    owner = models.ForeignKey(User, on_delete=models.CASCADE)
    comment = models.ForeignKey(
        Comment, related_name='votes', on_delete=models.CASCADE
    )
    created_at = models.DateTimeField(auto_now_add=True)
    direction = models.IntegerField(choices=VOTE_DIRECTION, default=0)

    class Meta:
        ordering = ['-created_at']
        unique_together = ['owner', 'comment']

    def __str__(self):
        return f'{self.owner} {self.direction} vote on {self.comment}'




        Genre stuff

genreResults.map((gen) => (
        <p>
            
            
                
        </p>
    ))


for (let key in data.results){
                    result.push(data.results[key].id);
                    //setGenreResults(data.results[key].id)
                    console.log(`adding ${data.results[key].id}`)
                    setGenreResults(
                        ...prevGenresResults,
                        setGenreResults(data.results[key].id)
                    )

                    

                }
setGenreResults(prevGen => {
                        return { 
                          ...prevGen, 
                          prevGen.push(data.results[key].id)
                        }
                      })



                      ///OLD REVIEW ITEM

 <Card className={styles.Review}>
        <Card.Body>
            <Media className="align--items-center justify-content-between">
            <Link to={`/profiles/${profile_id}`}>
            <Avatar src={profile_image} height={55} />
            {owner}
          </Link>
<div className="d-flex align-items-center">
    {is_owner && reviewPage && <MoreDropdown
    handleEdit={handleEdit}
                handleDelete={handleDelete}/>}
</div>
            </Media>
        </Card.Body>
        <Card.Body>
            {movie_title && <Card.Title className='text-center'><Link to={`/movies/${movie}`}>{movie_title}</Link></Card.Title>}
        </Card.Body>
        <Link to={`/reviews/${id}`}>
        <Card.Img src={movie_image} alt={movie_title} />
        </Link>
        <Card.Text>
            {content}<br></br>
            <p className={styles.reviewStars}>
            {/*ratingStars(rating)*/}
            </p>
        </Card.Text>
        <div className={styles.ReviewBar}>
            {is_owner ? (
                <OverlayTrigger placement="top" overlay={<Tooltip>You can't like your own review!</Tooltip>}>
                    <i className="fa-regular fa-heart"></i>
                </OverlayTrigger>
            ) : like_id ? (
                <span onClick={handleUnlikeHeart}><i className={`fa-regular fa-heart ${styles.Heart}`}></i></span>
            ) : currentUser ? (
                <span onClick={handleLikeHeart}>
                    <i className={`fa-regular fa-heart ${styles.HeartOutline}`}></i>
                </span>
            ) : (
                <OverlayTrigger placement="top" overlay={<Tooltip>Log in to like reviews</Tooltip>}>
                    <i className="fa-regular fa-heart"></i>
                </OverlayTrigger>
            )}
            {likes_count}

            <Link to={`/reviews/${id}`}>
            <i className="fa-regular fa-comment"></i>
            </Link>
            {comments_count}
            
        </div>
    </Card>




    navbar add icons:

      const addReviewIcon = (
    <NavLink
    className={styles.NavLink}
    activeClassName={styles.Active}
    to="/reviews/create"
    >
      <i className="fa-solid fa-message"></i>Add Review
      </NavLink>
  
  )

  const addMovieIcon = (
    <NavLink
    className={styles.NavLink}
    activeClassName={styles.Active}
    to="/movies/create"
    >
      <i className="fa-solid fa-film"></i>Add Movie
      </NavLink>
  
  )